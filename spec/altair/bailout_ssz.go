// Code generated by fastssz. DO NOT EDIT.
// Hash: 5bbe5e413b27a35b0c21ec3f78232dadc20a3211addf146a1f2643b09f44bff6
// Version: 0.1.4
package altair

import (
	"github.com/attestantio/go-eth2-client/spec/phase0"
	ssz "github.com/ferranbt/fastssz"
)

// MarshalSSZ ssz marshals the BailOut object
func (b *BailOut) MarshalSSZ() ([]byte, error) {
	return ssz.MarshalSSZ(b)
}

// MarshalSSZTo ssz marshals the BailOut object to a target array
func (b *BailOut) MarshalSSZTo(buf []byte) (dst []byte, err error) {
	dst = buf

	// Field (0) 'ValidatorIndex'
	dst = ssz.MarshalUint64(dst, uint64(b.ValidatorIndex))

	return
}

// UnmarshalSSZ ssz unmarshals the BailOut object
func (b *BailOut) UnmarshalSSZ(buf []byte) error {
	var err error
	size := uint64(len(buf))
	if size != 8 {
		return ssz.ErrSize
	}

	// Field (0) 'ValidatorIndex'
	b.ValidatorIndex = phase0.ValidatorIndex(ssz.UnmarshallUint64(buf[0:8]))

	return err
}

// SizeSSZ returns the ssz encoded size in bytes for the BailOut object
func (b *BailOut) SizeSSZ() (size int) {
	size = 8
	return
}

// HashTreeRoot ssz hashes the BailOut object
func (b *BailOut) HashTreeRoot() ([32]byte, error) {
	return ssz.HashWithDefaultHasher(b)
}

// HashTreeRootWith ssz hashes the BailOut object with a hasher
func (b *BailOut) HashTreeRootWith(hh ssz.HashWalker) (err error) {
	indx := hh.Index()

	// Field (0) 'ValidatorIndex'
	hh.PutUint64(uint64(b.ValidatorIndex))

	hh.Merkleize(indx)
	return
}

// GetTree ssz hashes the BailOut object
func (b *BailOut) GetTree() (*ssz.Node, error) {
	return ssz.ProofTree(b)
}
